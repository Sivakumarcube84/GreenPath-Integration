@RestResource(urlMapping='/programUpsertResource/*')
global class ProgramUpsertResource {
    @HttpPost
    global static void upsertAccount() {
        
        List<ProgramWrapper> programList = new List<ProgramWrapper>();
        List<Program__c> programListadd = new List<Program__c>();
        RestRequest Req = RestContext.request;
        RestResponse res = RestContext.response;
        String body = Req.requestBody.toString().trim();
        if (body != null && body != '')
        {
            try
            {
                programList = (List<ProgramWrapper>)JSON.deserialize(body, List<ProgramWrapper>.class);
                System.debug('serviceList>>' + programList);
                for (ProgramWrapper we : programList)
                {
                    Program__c  s = new Program__c();
                    if (we.Name != null && we.Name != ''){
                        s.Name = we.Name;
                    } 
                    
                    if (we.ProgramID != null && we.ProgramID != ''){
                        s.Program_ID__c =  decimal.valueOf(we.ProgramID);
                    }
                    if (we.ProgramCode != null && we.ProgramCode != ''){
                        s.Program_Code__c = we.ProgramCode;
                    }
                    if (we.ProgramCode != null && we.ProgramCode != ''){
                        s.ExternalFiled__c = we.ProgramID+' - '+ we.ProgramCode;
                    }
                    if (we.StartDate != null && we.StartDate != ''){
                        s.Program_Start_Date__c =  Date.valueOf(we.StartDate);
                    }
                    else
                    s.Program_Start_Date__c =  Null;
                    
                    if (we.EndDate != null && we.EndDate != ''){
                        s.Program_End_Date__c =  Date.valueOf(we.EndDate);
                    }
                    else
                    s.Program_End_Date__c =  Null;
                    
                    if (we.BILLEDFROM != null && we.BILLEDFROM != ''){
                        s.Billed_From__c = we.BILLEDFROM;
                    }
                        else
                    s.Billed_From__c = '';
                    
                    if (we.ACCESSPOINTS != null && we.ACCESSPOINTS != ''){
                        s.Channel_Access_Point_s__c = we.ACCESSPOINTS;
                    }
                        else
                    s.Channel_Access_Point_s__c = '';
                    
                    if (we.SessionFee != null && we.SessionFee != ''){
                        s.Client_Session_Fee__c  =decimal.valueOf( we.SessionFee);
                    } 
                    else
                        s.Client_Session_Fee__c =Null;
                    
                    if (we.EnrollmentFee != null && we.EnrollmentFee != ''){
                        s.Client_Enrollment_Fee__c  =decimal.valueOf( we.EnrollmentFee);
                    } 
                    else
                        s.Client_Enrollment_Fee__c = Null;
                    
                    if (we.CancellationFee != null && we.CancellationFee != ''){
                        s.Client_Cancellation_Fee__c  =decimal.valueOf( we.CancellationFee);
                    }  
                    else
                        s.Client_Cancellation_Fee__c = Null;
                    
                    if (we.RecurringFee != null && we.RecurringFee != ''){
                        s.Client_Recurring_Fee__c  =decimal.valueOf( we.RecurringFee);
                    } 
                    else
                        s.Client_Recurring_Fee__c = Null;
                    if (we.RecordType != null && we.RecordType != '')
                    {
                        
                        if(we.RecordType=='Grant Program'){
                            RecordType rr = [Select id, Name From RecordType where SobjectType = 'Program__c' AND Name ='Grant Program'];   
                            s.RecordTypeId  =rr.id;
                        }
                        else if(we.RecordType=='Generic Program')
                        {
                            RecordType rr = [Select id, Name From RecordType where SobjectType = 'Program__c' AND Name ='Generic Program'];   
                            s.RecordTypeId  =rr.id;
                        }
                        else if(we.RecordType=='Housing Program'){
                            RecordType rr = [Select id, Name From RecordType where SobjectType = 'Program__c' AND Name ='Housing Program'];   
                            s.RecordTypeId  =rr.id;
                        }
                       
                    }
                    /*else{
                               RecordType rr = [Select id, Name From RecordType where SobjectType = 'Program__c' AND Name ='Grant Program'];   
                            s.RecordTypeId  =rr.id;
                        }*/
                   
                    
                    if (we.ServiceAssociated != null && we.ServiceAssociated != ''){
                        s.Service_Associated__c  = we.ServiceAssociated;
                    } 
                        else
                    s.Service_Associated__c  = '';
                    
                    if (we.Status != null && we.Status != ''){
                        s.Program_Status__c = we.Status;
                    } 
                        else
                    s.Program_Status__c = '';
                    if (we.Description != null && we.Description != ''){
                        s.Program_Description__c = we.Description;
                    } 
                        else
                    s.Program_Description__c = '';
                    
                    
                    
                    programListadd.add(s);
                    System.debug('SizeofList' + programListadd.size());
                    System.debug('programListadd>>>>' + programListadd);
                    
                    Schema.SObjectField ftoken = Program__c.Fields.ExternalFiled__c;
                    Database.UpsertResult[] srList = Database.upsert (programListadd, ftoken, false);
                    System.debug('srlist>>' + srlist);
                    res.statusCode = 200;
                    res.addHeader('Content-Type', 'application/json');
                    res.responseBody = Blob.valueOf(JSON.serialize(programListadd));
                    System.debug('res.responseBody>>' + res.responseBody);
                }
            }
            catch (Exception e){
                res.statusCode = 500;
                res.addHeader('Content-Type', 'application/json');
                res.responseBody = Blob.valueOf(e.getInaccessibleFields()+e.getTypeName());
                System.debug('res.responseBody>>' + res.responseBody);
            }
        } else{
            res.statusCode = 500;
            res.addHeader('Content-Type', 'application/json');
            res.responseBody = Blob.valueOf('Invalid Request');
            System.debug('res.responseBody>>' + res.responseBody);
            
        }
    }
    
    
    public class ProgramWrapper{
        public String Name { get; set; }
        public String Description { get; set; }
        public String Status { get; set; }
        public String ProgramID{ get; set; }
        public String ProgramCode { get; set; }
        public String StartDate{ get; set; }
        public String  EndDate{get;set;}
        public String  BILLEDFROM {get;set;}
        public String  ACCESSPOINTS {get;set;}
        public String  SessionFee{get;set;}
        public String EnrollmentFee{get;set;}
        public String  CancellationFee{get;set;}
        public String   RecurringFee{get;set;}
        public String   RecordType{get;set;}
        public String   ServiceAssociated {get;set;}
        
    }
}
