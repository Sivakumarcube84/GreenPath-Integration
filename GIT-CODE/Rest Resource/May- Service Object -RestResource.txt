@RestResource(urlMapping = '/serviceUpsertResource/*')
global with sharing class serviceUpsertResource {
    @HttpPost
    global static void insertServiceRequest(){
        
        List<ServiceWrapper> serviceList = new List<ServiceWrapper>();
        List<Service__c> serviceListadd = new List<Service__c>();
        RestRequest Req = RestContext.request;
        RestResponse res = RestContext.response;
        String body = Req.requestBody.toString().trim();
        if (body != null && body != '')
        {
            try
            {
                serviceList = (List<ServiceWrapper>)JSON.deserialize(body, List<ServiceWrapper>.class);
                System.debug('serviceList>>' + serviceList);
                for (ServiceWrapper we : serviceList)
                {
                    Service__c  s = new Service__c();
                    if (we.Service_ID != null && we.Service_ID != ''){
                        s.Service_ID__c = decimal.valueOf(we.Service_ID);
                    }
                    if (we.Service_Code != null && we.Service_Code != ''){
                        s.Service_Code__c = we.Service_Code;
                    }
                    if (we.Service_Code != null && we.Service_Code != ''){
                        s.ExternalID__c = we.Service_ID+' - '+ we.Service_Code;
                    }
                    if (we.Service_Name != null && we.Service_Name != ''){
                        s.Name = we.Service_Name;
                    } 
                    if (we.Status != null && we.Status != ''){
                        s.Status__c = we.Status;
                    } 
                    serviceListadd.add(s);
                    System.debug('SizeofList' + serviceListadd.size());
                    System.debug('serviceListadd>>>>' + serviceListadd);
                    //SELECT Id, Name,ExternalID__c, Service_Date_of_Deactivation__c, Service_Date_of_Activation__c, Service_ID__c, Service_Code__c, Status__c FROM Service__c
                    
                    Schema.SObjectField ftoken = Service__c.Fields.ExternalID__c;
                    Database.UpsertResult[] srList = Database.upsert (serviceListadd, ftoken, false);
                    System.debug('srlist>>' + srlist);
                    res.statusCode = 200;
                    res.responseBody = Blob.valueOf(String.valueof(serviceListadd));
                    System.debug('res.responseBody>>' + res.responseBody);
                }
            }
            catch (Exception e){
                res.statusCode = 500;
                res.responseBody = Blob.valueOf(e.getMessage());
                System.debug('res.responseBody>>' + res.responseBody);
            }
        } else{
            res.statusCode = 500;
            res.responseBody = Blob.valueOf('Invalid Request');
        }
    }
    public class ServiceWrapper{
        public String Service_ID{ get; set; }
        public String Service_Code{ get; set; }
        public String Service_Name{ get; set; }
        public String Service_Date_Activation { get; set; }
        public String Service_Date_Deactivation{ get; set; }
        public String  Status{get;set;}
        
    }
    
}